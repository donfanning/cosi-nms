head	1.1;
branch	1.1.1;
access;
symbols
	RELEASE_1_2_1:1.1.1.1
	RELEASE:1.1.1.1
	MarcusCom:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2001.05.24.05.58.05;	author jmarcus;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.24.05.58.05;	author jmarcus;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@// This example is from _Java Examples in a Nutshell_. (http://www.oreilly.com)
// Copyright (c) 1997 by David Flanagan
// This example is provided WITHOUT ANY WARRANTY either expressed or implied.
// You may study, use, modify, and distribute it for non-commercial purposes.
// For any commercial use, see http://www.davidflanagan.com/javaexamples

// All 1.0 deprecated code has been removed by Joe Clarke
// <marcus@@marcuscom.com>.

package com.marcuscom.confregdecode;

import java.awt.*;
import java.awt.event.*;

public class InfoDialog extends Dialog implements ActionListener {
    protected Button button;          // The okay button of the dialog
    protected MultiLineLabel label;   // The message displayed by the dialog

    public InfoDialog(Frame parent, String title, String message) {
        // Create a non-modal dialog with the specified title and parent
        super(parent, title, false);

        // Create and use a BorderLayout manager with 15 pixel spacing
        this.setLayout(new BorderLayout(15, 15));

        // Create the message component and add it to the window
        // MultiLineLabel is a custom component defined later in this chapter
        label = new MultiLineLabel(message, 20, 20);
        this.add("Center", label);

        // Create an Okay button in a Panel; add the Panel to the window
        // Use a FlowLayout to center the button in the panel and give it margins.
        // Note the nested use of containers and layout managers.
        button = new Button("Okay");
        button.addActionListener(this);
        Panel p = new Panel();
        p.setLayout(new FlowLayout(FlowLayout.CENTER, 15, 15));
        p.add(button);
        this.add("South", p);
        // Set the dialog size to the preferred size of its components
        this.pack();
    }

    public void actionPerformed(ActionEvent e) {
        this.setVisible(false);
        this.dispose();
    }

}
@


1.1.1.1
log
@This is the initial import of the Cisco Systems IOS(tm) Configuration
Register Decoder.
@
text
@@
