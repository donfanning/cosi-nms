#!/usr/local/bin/expect -f
#
# check to see if we got all the arguments

# useage: upload-config hostname  password  enablepassword configfilename
#
# A simple script to upload configurations to a router.
#
#
#-----------------------------------------------------------
# ver   comments                author          date
# 00    original                dblack          5/98
#
# This script released to open source under the Mozilla Public License
#-----------------------------------------------------------
#
# check to see if we got all the arguments
if { [llength $argv] != 5} {
puts " "
puts "useage: upload-config hostname password enablepassword serveripaddress adconfigfilename"
puts " "
                         exit
                        }

set router [lindex $argv 0]
set password [lindex $argv 1]
set enablepass [lindex $argv 2]
set serveraddress [lindex $argv 3]
set configname [lindex $argv 4]
#
log_user 0
spawn telnet $router 
set timeout 20

#----------------------
# enter the login password 
#----------------------
expect {*Password:*}    {}\
                timeout {puts "timed out waiting for login prompt";exit}
send ${password}\r

expect {*Password:*}    {puts "Bad password\n"; exit} \
                {*>}            {} \
                timeout {puts "timed out waiting for prompt after 1st password";exit}
#----------------------
# enter the enable password 
#----------------------

send enable\r
expect assword:
send ${enablepass}\r

expect {*Password:*}    {puts "Bad  enable password\n"; exit} \
                {*#}            {} \
                timeout {puts "timed out waiting for prompt after enable password";exit}
#----------------------
# config net 
#----------------------
send "config net\r"
expect 		{Host*]}            {} \
                timeout {puts "timed out waiting for prompt after config net";exit}
#----------------------
# HOST file net 
#----------------------
send "host\r"
expect 		{Address*]}            {} \
                timeout {puts "timed out waiting for prompt after host";exit}
#----------------------
# HOST file net 
#----------------------
send "$serveraddress\r"
expect 		{Name*]?}            {} \
                timeout {puts "timed out waiting for prompt after server address";exit}
#----------------------
# config file name 
#----------------------
send "$configname\r"
expect 		{Configure*]}            {} \
                timeout {puts "timed out waiting for prompt after config name ";exit}
#----------------------
# confirm 
#----------------------
send "\r"
expect 		{*#}            {} \
                timeout {puts "timed out waiting for prompt after confirm ";exit}
exit 0
