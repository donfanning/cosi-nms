head     1.1;
branch   1.1.1;
access   ;
symbols  arelease:1.1.1.1 avendor:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2001.08.22.14.29.31;  author robelewi;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     2001.08.22.14.29.31;  author robelewi;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#!/usr/local/bin/expect -f
#
#----------------------------------------------------------------------
# This script released to open source under the Mozilla Public License
#----------------------------------------------------------------------
# check to see if we got all the arguments

if { [llength $argv] != 5} {
puts " "
puts "show-ip-summary   hostname  password  enablepassword  wait  repeat"
puts " " 
puts " "
                         exit
                        }


set router [lindex $argv 0]
set password [lindex $argv 1]
set enablepass [lindex $argv 2]
set waitperiod [lindex $argv 3]
set repeatcount [lindex $argv 4]

#
log_user 0
spawn telnet $router 


#----------------------
# enter the login password 
#----------------------

expect {*Password:*}    {}\
                timeout         {timedout waiting for login prompt}

send ${password}\r

expect {*Password:*}    {send_user Bad password\n; exit} \
                {*>}            {} \
                timeout         {timedout waiting for login prompt}


#----------------------
# enter the enable password 
#----------------------

send enable\r
expect assword:
send ${enablepass}\r

expect {*Password:*}    {send_user Bad  enable password\n; exit} \
                {*#}            {} \
                timeout         {timedout waiting for login prompt}


#----------------------
# Okay now reset the screen size to get rid of the page prompt
#----------------------

send "term len 0\r"
expect 		{*#}            {} \
                timeout         {timedout waiting for login prompt}

#----------------------

for {} {$repeatcount > 0} {incr repeatcount -1} {
log_user 1
puts "[exec date]"
send "show ip route summary\r"
expect 		{*#}            {} \
                timeout         {timedout waiting for login prompt}
sleep $waitperiod
}
#----------------------

send exit\r
exit 0
@


1.1.1.1
log
@ios command script toolkit initial checkin 
@
text
@@
