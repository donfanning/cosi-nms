head	1.6;
access;
symbols
	devel:1.1.1.1 COSI:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2001.08.26.06.00.13;	author jmarcus;	state dead;
branches;
next	1.5;

1.5
date	2001.08.20.02.20.25;	author jmarcus;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.13.19.41.01;	author nick07;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.10.17.37.07;	author jmarcus;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.10.16.17.53;	author jmarcus;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.07.01.59.17;	author jmarcus;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.08.07.01.59.17;	author jmarcus;	state Exp;
branches;
next	;


desc
@@


1.6
log
@This module is being moved back one directory since there was just one
module in the Targets directory anyway.
@
text
@package SAA::Targets::Target;

use strict;
require 5.002;
use lib qw(../..);
use SAA::Globals;

sub new {
    my ( $that, @@args ) = @@_;
    my $class = ref($that) || $that;

    my $self = {
        Name    => undef,
        Address => undef,
        Status  => $SAA::Globals::HOST_UP_IP,
    };

    bless( $self, $class );
    $self->name( $args[0] );
    $self->addr( $args[1] );
    $self;
}

use Alias qw(attr);
use vars qw($Name $Address $Status);

sub name {
    my $self = attr shift;
    if (@@_) { $Name = shift; }
    return $Name;
}

sub addr {
    my $self = attr shift;
    if (@@_) { $Address = shift; }
    return $Address;
}

sub status {

    # This method is divided into a public accessor method, and a private
    # set method. 
    my $self = attr shift;
    return $Status;
}

sub _status {
    my $self = attr shift;
    $Status = shift;
}

1;
__END__
@


1.5
log
@Forgot to remove the use SAA::Ping directive.
@
text
@@


1.4
log
@*** empty log message ***
@
text
@a6 2
# Is this still a valid Package?
use SAA::Ping;
@


1.3
log
@Removed the ping support from the API.  This was spotty at best since it
couldn't easily scale to every operating system.  It wasn't really needed
either.
@
text
@d7 1
@


1.2
log
@Fixed the lib path to make it less marcus-dependent.
@
text
@a52 19
sub test {

    # This method tests for connectivity to the target.  This is _not_ run
    # automatically.  By default, all hosts are said to be reachable via
    # IP since they may not _really_ be reachable from the management
    # station.
    my $self = attr shift;
    return 0 unless defined $self->addr();

    if ( !saa_ping( $self->addr() ) ) {
        $self->_status($SAA::Globals::HOST_DOWN);
    }
    else {
        $self->_status($SAA::Globals::HOST_UP_IP);
    }

    1;
}

@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
use lib qw(/home/marcus/src/saa);
@


1.1.1.1
log
@Initial import into the COSI CVS respository
@
text
@@
