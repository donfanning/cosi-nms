%!PS-Adobe-3.0
%%Title: MISAL.java
%%For: Joe "Marcus" Clarke
%%Creator: a2ps version 4.13
%%CreationDate: Tue Jun  5 12:08:49 2001
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(import) K
( java.io.*;) p n
(import) K
( java.net.*;) p n
(import) K
( java.util.*;) p n
(import) K
( com.oroinc.text.regex.*;) p n
() N
(public) K
( ) p
(class) K
( ) p
(MISAL) L
( ) p
(implements) K
( Runnable {) p n
() S 8 T () S
(public) K
( ) p
(final) K
( ) p
(static) K
( ) p
(int) k
( MISAL_STATE_UNKNOWN = -1;) p n
() S 8 T () S
(public) K
( ) p
(final) K
( ) p
(static) K
( ) p
(int) k
( MISAL_STATE_CLOSED = 0;) p n
() N
() S 8 T () S
(protected) K
( ) p
(final) K
( ) p
(static) K
( ) p
(int) k
( MISAL_DEFAULT_SLEEP_INTERVAL = 1;) p n
() S 8 T () S
(protected) K
( ) p
(final) K
( ) p
(static) K
( ) p
(int) k
( MISAL_THREAD_SLEEP_INTERVAL = 100;) p n
() S 8 T () S
(protected) K
( ) p
(final) K
( ) p
(static) K
( ) p
(int) k
( DEFAULT_RETRIES = 1000;) p n
() S 8 T () S
(protected) K
( ) p
(final) K
( ) p
(static) K
( ) p
(int) k
( DEFAULT_BUFFER_SIZE = 1*1024*1024;) p n
() N
() S 8 T () S
(private) K
( Hashtable stateTable = ) p
(null) k
(;) p n
() S 8 T () S
(private) K
( Socket _socket = ) p
(null) k
(;) p n
() S 8 T () S
(private) K
( String _buffer = ) p
(null) k
(;) p n
() S 8 T () S
(private) K
( ) p
(boolean) k
( _debug = ) p
(false) k
(;) p n
() S 8 T () S
(private) K
( Thread _stateChecker = ) p
(null) k
(;) p n
() S 8 T () S
(private) K
( BufferedInputStream _bis = ) p
(null) k
(;) p n
() S 8 T () S
(private) K
( BufferedOutputStream _bos = ) p
(null) k
(;) p n
() S 8 T () S
(private) K
( ) p
(int) k
( _bufferSize = this.DEFAULT_BUFFER_SIZE;) p n
() S 8 T () S
(private) K
( ) p
(int) k
( _currentState = this.MISAL_STATE_UNKNOWN;) p n
() S 8 T () S
(private) K
( ) p
(int) k
( _sleepInterval = this.MISAL_DEFAULT_SLEEP_INTERVAL;) p n
() N
() S 8 T () S
(public) K
( MISAL\(Socket socket, ) p
(boolean) k
( debug\) ) p
(throws) K
( SocketException,IOExce) p n
(ption {) N
() S 8 T () S 16 T () S
(this) k
(\(socket, debug, DEFAULT_BUFFER_SIZE\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( MISAL\(Socket socket\) ) p
(throws) K
( SocketException, IOException {) p n
() S 8 T () S 16 T () S
(this) k
(\(socket, ) p
(false) k
(, DEFAULT_BUFFER_SIZE\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( MISAL\(Socket socket, ) p
(int) k
( bufSize\) ) p
(throws) K
( SocketException, IOExcep) p n
(tion {) N
() S 8 T () S 16 T () S
(this) k
(\(socket, ) p
(false) k
(, bufSize\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( MISAL\(Socket socket, ) p
(boolean) k
( debug, ) p
(int) k
( bufSize\) ) p
(throws) K
( SocketExc) p n
(eption,IOException {) N
() S 8 T () S 16 T () S
(if) K
( \(socket == ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S
(throw) K
( ) p
(new) K
( SocketException\(") p
(Socket passed to MISAL cannot be null.) str
("\)) p n
(;) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (this._socket = socket;) N
() S 8 T () S 16 T (this._debug = debug;) N
() S 8 T () S 16 T (this._bufferSize = bufSize;) N
() S 8 T () S 16 T (_bis = ) S
(new) K
( BufferedInputStream\(this._socket.getInputStream\(\), bu) p n
(fSize\);) N
() S 8 T () S 16 T (_bos = ) S
(new) K
( BufferedOutputStream\(this._socket.getOutputStream\(\)\);) p n
() S 8 T () S 16 T (stateTable = ) S
(new) K
( Hashtable\(\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(protected) K
( BufferedInputStream getInputStream\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this._bis;) p n
() S 8 T (}) N
() N
() S 8 T () S
(protected) K
( BufferedOutputStream getOutputStream\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this._bos;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(synchronized) K
( ) p
(void) k
( addState\() p
(int) k
( stateId, String prompt\) ) p
(throws) K
( Mal) p n
(formedPatternException {) N
() S 8 T () S 16 T (Perl5Compiler compiler = ) S
(new) K
( Perl5Compiler\(\);) p n
() S 8 T () S 16 T (Pattern pattern = compiler.compile\(prompt\);) N
() S 8 T () S 16 T (stateTable.put\(pattern, ) S
(new) K
( Integer\(stateId\)\);) p n
() S 8 T () S 16 T (startCheckingState\(\);) N
() S 8 T (}) N
(MISAL.java) (Page 1/6) (Jun 04, 01 22:55) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S
(public) K
( ) p
(synchronized) K
( ) p
(void) k
( removeState\(String prompt\) {) p n
() S 8 T () S 16 T (this.stateTable.remove\(prompt\);) N
() S 8 T (}) N
() N
() S 8 T () S
(protected) K
( ) p
(void) k
( startCheckingState\(\) {) p n
() S 8 T () S 16 T () S
(if) K
( \(_stateChecker == ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (_stateChecker = ) S
(new) K
( Thread\() p
(this) k
(\);) p n
() S 8 T () S 16 T () S 24 T (_stateChecker.start\(\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(protected) K
( ) p
(void) k
( stopCheckingState\(\) {) p n
() S 8 T () S 16 T () S
(if) K
( \(_stateChecker != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (_stateChecker.stop\(\);) N
() S 8 T () S 16 T () S 24 T (_stateChecker = ) S
(null) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( run\(\) {) p n
() S 8 T () S 16 T () S
(while) K
(\() p
(true) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(stateTable.isEmpty\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(/* We don't want to hit a null pointer if) c n
() S 8 T () S 16 T () S 24 T () S 32 T (   someone empties the state table on us */) N
() p 8 T () S 16 T () S 24 T () S 32 T (this.stopCheckingState\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(_socket == ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.setState\(this.MISAL_STATE_CLOSED\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (this.stopCheckingState\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () N
() S 8 T () S 16 T () S 24 T (String buffer = this._readAll\(\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(buffer != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.setBuffer\(buffer\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Enumeration keys = stateTable.keys\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Perl5Matcher p5m = ) S
(new) K
( Perl5Matcher\(\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Pattern pattern = ) S
(null) k
(;) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(while) K
(\(keys.hasMoreElements\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (pattern = \(Pattern\)keys.nextElement\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(p5m.contains\(buffer, pattern\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(int) k
( state = \(\(Integer\)stateTable) p n
(.get\(pattern\)\).intValue\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (this.setState\(state\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Thread.sleep\(this.getSleepInterval\(\)\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(catch) K
( \(InterruptedException ie\) {) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(protected) K
( ) p
(void) k
( setSleepInterval\() p
(int) k
( interval\) {) p n
() S 8 T () S 16 T (this.debug\(") S
(Setting sleep interval to ) str
(" + interval\);) p n
() S 8 T () S 16 T (this._sleepInterval = interval;) N
() S 8 T (}) N
() N
() S 8 T () S
(protected) K
( ) p
(int) k
( getSleepInterval\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this._sleepInterval;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(synchronized) K
( ) p
(void) k
( setState\() p
(int) k
( state\) {) p n
() S 8 T () S 16 T (this.debug\(") S
(Setting state to ) str
(" + state\);) p n
() S 8 T () S 16 T (this._currentState = state;) N
(MISAL.java) (Page 2/6) (Jun 04, 01 22:55) title
border
grestore
(Printed by Joe "Marcus" Clarke) rhead
(MISAL.java) (1/3) (Tuesday June 05, 2001) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(synchronized) K
( ) p
(int) k
( getState\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this._currentState;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(synchronized) K
( ) p
(int) k
( getBufferSize\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this._bufferSize;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(synchronized) K
( ) p
(void) k
( setBufferSize\() p
(int) k
( size\) {) p n
() S 8 T () S 16 T (this._bufferSize = size;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(synchronized) K
( ) p
(void) k
( clearBuffer\(\) {) p n
() S 8 T () S 16 T (this.setBuffer\() S
(null) k
(\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(synchronized) K
( ) p
(void) k
( setBuffer\(String buffer\) {) p n
() S 8 T () S 16 T () S
(if) K
( \(buffer == ) p
(null) k
( || this._buffer == ) p
(null) k
( || this._buffer.lengt) p n
(h\(\) >= this.getBufferSize\(\)\) {) N
() S 8 T () S 16 T () S 24 T (this.debug\(") S
(Setting buffer to \\") str
(" + buffer + ") p
(\\") str
("\);) p n
() S 8 T () S 16 T () S 24 T (this._buffer = buffer;) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T (this.debug\(") S
(Appending \\") str
(" + buffer + ") p
(\\" to buffer) str
("\);) p n
() S 8 T () S 16 T () S 24 T (this._buffer = this._buffer.concat\(buffer\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(synchronized) K
( String getBuffer\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this._buffer;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(synchronized) K
( ) p
(boolean) k
( getDebug\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this._debug;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(synchronized) K
( ) p
(boolean) k
( toggleDebug\(\) {) p n
() S 8 T () S 16 T (this._debug = this._debug ? ) S
(false) k
( : ) p
(true) k
(;) p n
() S 8 T () S 16 T (this.debug\(") S
(Debugging set to ) str
(" + this._debug\);) p n
() S 8 T () S 16 T () S
(return) K
( this._debug;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( send\() p
(int) k
( state, String data, String expect\) ) p
(throws) K
( IllegalMI) p n
(SALStateException, IOException {) N
() S 8 T () S 16 T (this.send\(state, data, expect, 0, 0\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( send\() p
(int) k
( state, String data, ) p
(int) k
( expectState\) ) p
(throws) K
( Illegal) p n
(MISALStateException, IOException {) N
() S 8 T () S 16 T (this.send\(state, data, ) S
(null) k
(, expectState, 0\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( send\() p
(int) k
( state, String data, String expect, ) p
(int) k
( wait\) ) p
(throws) K
() p n
( IllegalMISALStateException, IOException {) N
() S 8 T () S 16 T (this.send\(state, data, expect, 0, wait\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( send\() p
(int) k
( state, String data, ) p
(int) k
( expectState, ) p
(int) k
( wait\) ) p
(thro) K n
(ws) S
( IllegalMISALStateException, IOException {) p n
() S 8 T () S 16 T (this.send\(state, data, ) S
(null) k
(, expectState, wait\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(protected) K
( ) p
(void) k
( send\() p
(int) k
( state, String data, String expect, ) p
(int) k
( expectSta) p n
(te, ) S
(int) k
( wait\) ) p
(throws) K
( IllegalMISALStateException, IOException {) p n
() S 8 T () S 16 T (this.debug\(") S
(Entering send\(int, String, String, int, int\) method.) str
("\);) p n
() S 8 T () S 16 T () S
(boolean) k
( result = ) p
(false) k
(;) p n
() S 8 T () S 16 T () S
(int) k
( currState = this.MISAL_STATE_UNKNOWN;) p n
(MISAL.java) (Page 3/6) (Jun 04, 01 22:55) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(byte) k
( b[] = ) p
(null) k
(;) p n
() S 8 T () S 16 T () S
(if) K
( \(wait == 0\) wait = this.DEFAULT_RETRIES;) p n
() S 8 T () S 16 T () S
(for) K
(\() p
(int) k
( i = 1; i <= wait; i++\) {) p n
() S 8 T () S 16 T () S 24 T (currState = this.getState\(\);) N
() S 8 T () S 16 T () S 24 T (this.debug\(") S
(i = ) str
(" + i + ") p
( and currState = ) str
(" + currState\);) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(currState == state\) ) p
(break) K
(;) p n
() S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Thread.sleep\(this.MISAL_THREAD_SLEEP_INTERVAL\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(catch) K
( \(InterruptedException ie\) {}) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(if) K
( \(currState != state\) {) p n
() S 8 T () S 16 T () S 24 T () S
(throw) K
( ) p
(new) K
( IllegalMISALStateException\(") p
(Needed state ) str
(" + state) p n
( + ") S
(, but found state ) str
(" + currState\);) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (b = ) S
(new) K
( ) p
(byte) k
([data.length\(\)];) p n
() S 8 T () S 16 T (b = data.getBytes\(\);) N
() S 8 T () S 16 T (this.debug\(") S
(Sending data: ) str
(" + data\);) p n
() S 8 T () S 16 T (this._bos.write\(b, 0, b.length\);) N
() S 8 T () S 16 T (this._bos.flush\(\);) N
() S 8 T () S 16 T () S
(if) K
( \(expect != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (this.debug\(") S
(Expecting text: \\") str
(" + expect + ") p
(\\") str
("\);) p n
() S 8 T () S 16 T () S 24 T (result = this.expect\(expect, wait\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T (this.debug\(") S
(Expecting state: ) str
(" + expectState\);) p n
() S 8 T () S 16 T () S 24 T (result = this.expect\(expectState, wait\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(if) K
( \(!result\) {) p n
() S 8 T () S 16 T () S 24 T () S
(throw) K
( ) p
(new) K
( IllegalMISALStateException\(") p
(Invalid expect state) str
("\);) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(protected) K
( ) p
(boolean) k
( expect\() p
(int) k
( state, ) p
(int) k
( tries\) {) p n
() S 8 T () S 16 T (this.debug\(") S
(Entering method expect\(int, int\)) str
("\);) p n
() S 8 T () S 16 T () S
(for) K
(\() p
(int) k
( i = 1; i <= tries; i++\) {) p n
() S 8 T () S 16 T () S 24 T (this.debug\(") S
(i = ) str
(" + i + ") p
( and state = ) str
(" + this.getState\(\)\);) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(this.getState\(\) == state\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(true) k
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Thread.sleep\(this.MISAL_THREAD_SLEEP_INTERVAL\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(catch) K
( \(InterruptedException ie\) {}) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( ) p
(false) k
(;) p n
() S 8 T (}) N
() N
() S 8 T () S
(protected) K
( ) p
(boolean) k
( expect\(String prompt, ) p
(int) k
( tries\) {) p n
() S 8 T () S 16 T (this.debug\(") S
(Entering method expect\(String, int\)) str
("\);) p n
() S 8 T () S 16 T (Perl5Compiler compiler = ) S
(new) K
( Perl5Compiler\(\);) p n
() S 8 T () S 16 T (Perl5Matcher matcher = ) S
(new) K
( Perl5Matcher\(\);) p n
() S 8 T () S 16 T (Pattern pattern = ) S
(null) k
(;) p n
() S 8 T () S 16 T () S
(for) K
(\() p
(int) k
( i = 1; i <= tries; i++\) {) p n
() S 8 T () S 16 T () S 24 T (String buffer = this.getBuffer\(\);) N
() S 8 T () S 16 T () S 24 T (this.debug\(") S
(i = ) str
(" + i + ") p
( buffer = \\") str
(" + buffer + ") p
(\\") str
("\);) p n
() S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (pattern = compiler.compile\(prompt\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(catch) K
( \(MalformedPatternException mpe\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(false) k
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(buffer != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(matcher.contains\(this.getBuffer\(\), pattern\)\)) p n
( {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.debug\(") S
(Found a buffer match!) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(return) K
( ) p
(true) k
(;) p n
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
(MISAL.java) (Page 4/6) (Jun 04, 01 22:55) title
border
grestore
(Printed by Joe "Marcus" Clarke) rhead
(MISAL.java) (2/3) (Tuesday June 05, 2001) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Thread.sleep\(this.MISAL_THREAD_SLEEP_INTERVAL\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(catch) K
( \(InterruptedException ie\) {}) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( ) p
(false) k
(;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( debug\(String msg\) {) p n
() S 8 T () S 16 T () S
(if) K
( \(this.getDebug\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (System.err.println\(") S
(DEBUG: ) str
(" + msg\);) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( String _readAll\(\) {) p n
() S 8 T () S 16 T () S
(byte) k
( b[] = ) p
(null) k
(;) p n
() S 8 T () S 16 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(_bis.available\(\) == 0\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T (b = ) S
(new) K
( ) p
(byte) k
([_bis.available\(\)];) p n
() S 8 T () S 16 T () S 24 T () S
(int) k
( t;) p n
() S 8 T () S 16 T () S 24 T () S
(int) k
( y = 0;) p n
() S 8 T () S 16 T () S 24 T () S
(byte) k
([] obuf = ) p
(new) K
( ) p
(byte) k
([4];) p n
() S 8 T () S 16 T () S 24 T () S
(while) K
( \(_bis.available\(\) > 0\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (t = _bis.read\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(t != 255\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(/* If not a negotiation character,) c n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (   it needs to be read as data. */) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b[0] = \() S
(byte) k
(\)t;) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(break) K
(;) p n
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (obuf[0] = \() S
(byte) k
(\)255;) p n
() S 8 T () S 16 T () S 24 T () S 32 T (t = _bis.read\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(t == 251 || t == 252\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (y = 254;) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(t == 253 || t == 254\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (y = 252;) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(y > 0\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (obuf[1] = \() S
(byte) k
(\)y;) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (obuf[2] = \() S
(byte) k
(\)_bis.read\(\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (_bos.write\(obuf, 0, 3\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (_bos.flush\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (y = 0;) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(_bis.available\(\) == 0\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(/* This starts at 1 now because we load the first) c n
() S 8 T () S 16 T () S 24 T (   character in during the negotiation code. */) N
() p 8 T () S 16 T () S 24 T () S
(int) k
( result = _bis.read\(b, 1, _bis.available\(\)\);) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(result == 0\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(catch) K
( \(IOException ioe\) {) p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (this.debug\(") S
(Read \\") str
(" + ) p
(new) K
( String\(b\) + ") p
(\\" from socket input stream) str
("\);) p n
() S 8 T () S 16 T () S
(return) K
( ) p
(new) K
( String\(b\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( closeSocket\(\) {) p n
() S 8 T () S 16 T (this.debug\(") S
(Closing socket ...) str
("\);) p n
(MISAL.java) (Page 5/6) (Jun 04, 01 22:55) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(if) K
( \(this._socket != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this._socket.close\(\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(catch) K
( \(IOException ioe\) {) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T (this._socket = ) S
(null) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) N
(MISAL.java) (Page 6/6) (Jun 04, 01 22:55) title
border
grestore
(Printed by Joe "Marcus" Clarke) rhead
(MISAL.java) (3/3) (Tuesday June 05, 2001) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
